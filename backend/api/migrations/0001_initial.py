# Generated by Django 5.2 on 2025-07-08 05:20

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='LibraryItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('authors', models.CharField(max_length=255)),
                ('publication_date', models.DateField()),
                ('genre', models.CharField(max_length=100)),
                ('availability_status', models.CharField(choices=[('Available', 'Available'), ('CheckedOut', 'Checked Out'), ('Reserved', 'Reserved'), ('UnderReview', 'Under Review')], default='Available', max_length=20)),
                ('digital_source', models.URLField(blank=True, null=True)),
                ('item_type', models.CharField(choices=[('EBook', 'E-Book'), ('PrintedBook', 'Printed Book'), ('ResearchPaper', 'Research Paper'), ('Audiobook', 'Audiobook'), ('Journal', 'Journal')], default='PrintedBook', max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='AudiobookModel',
            fields=[
                ('library_item', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='audiobook', serialize=False, to='api.libraryitem')),
                ('audio_format', models.CharField(max_length=20)),
                ('duration', models.DurationField()),
                ('narrator', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'api_audiobookmodel',
            },
        ),
        migrations.CreateModel(
            name='EBookModel',
            fields=[
                ('library_item', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='ebook', serialize=False, to='api.libraryitem')),
                ('file_format', models.CharField(max_length=20)),
                ('download_link', models.URLField()),
            ],
        ),
        migrations.CreateModel(
            name='JournalModel',
            fields=[
                ('library_item', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='journal', serialize=False, to='api.libraryitem')),
                ('volume', models.CharField(max_length=50)),
                ('issue', models.CharField(max_length=50)),
                ('issn', models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PrintedBookModel',
            fields=[
                ('library_item', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='printed_book', serialize=False, to='api.libraryitem')),
                ('location', models.CharField(max_length=100)),
                ('copy_number', models.IntegerField()),
                ('no_of_books_available', models.PositiveIntegerField(default=1)),
                ('barcode', models.CharField(max_length=100, unique=True)),
                ('physical_condition', models.CharField(default='New', max_length=20)),
            ],
            options={
                'db_table': 'api_printedbookmodel',
            },
        ),
        migrations.CreateModel(
            name='ResearchPaperModel',
            fields=[
                ('library_item', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='research_paper', serialize=False, to='api.libraryitem')),
                ('doi', models.CharField(max_length=100)),
                ('citation_count', models.IntegerField(default=0)),
                ('source_api', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='LibraryUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('password_hash', models.CharField(max_length=255)),
                ('role', models.CharField(choices=[('Student', 'Student'), ('Researcher', 'Researcher'), ('Faculty', 'Faculty'), ('Guest', 'Guest'), ('Librarian', 'Librarian')], max_length=20)),
                ('current_loans', models.ManyToManyField(blank=True, related_name='borrowers', to='api.libraryitem')),
            ],
        ),
        migrations.CreateModel(
            name='BorrowingTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('borrow_date', models.DateTimeField(auto_now_add=True)),
                ('due_date', models.DateTimeField()),
                ('return_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('Active', 'Active'), ('Completed', 'Completed'), ('Overdue', 'Overdue')], default='Active', max_length=20)),
                ('library_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='api.libraryitem')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='api.libraryuser')),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_read', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='api.libraryuser')),
            ],
        ),
        migrations.CreateModel(
            name='Reservation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reservation_date', models.DateTimeField(auto_now_add=True)),
                ('expiry_date', models.DateTimeField()),
                ('status', models.CharField(choices=[('Active', 'Active'), ('Expired', 'Expired'), ('Cancelled', 'Cancelled')], default='Active', max_length=20)),
                ('library_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reservation_queue', to='api.libraryitem')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reservations', to='api.libraryuser')),
            ],
        ),
    ]
